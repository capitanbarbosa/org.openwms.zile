#!/bin/bash

echo "üè¨ Centro de Distribuci√≥n Medell√≠n - Interactive Demo"
echo "====================================================="
echo "Colombian Supermarket Distribution Center | Centro de Distribuci√≥n de Supermercados Colombianos"
echo ""

# Function to check service health
check_service() {
    local service_name=$1
    local port=$2
    echo "üîç Checking $service_name on port $port..."
    if curl -s -f "http://localhost:$port" > /dev/null 2>&1; then
        echo "‚úÖ $service_name is running | $service_name est√° funcionando"
        return 0
    else
        echo "‚ùå $service_name is not responding | $service_name no responde"
        return 1
    fi
}

# Function to simulate daily operations
simulate_daily_operations() {
    echo ""
    echo "üöö Simulating Daily Warehouse Operations | Simulando Operaciones Diarias del Almac√©n"
    echo "====================================================================================="
    
    echo ""
    echo "üì¶ Morning Receiving | Recibo Matutino:"
    echo "---------------------------------------"
    echo "‚Ä¢ Truck arrives with Arroz Diana from Molinos Roa"
    echo "‚Ä¢ Cami√≥n llega con Arroz Diana de Molinos Roa"
    echo "‚Ä¢ Refrigerated truck with Alpina dairy products"
    echo "‚Ä¢ Cami√≥n refrigerado con productos l√°cteos Alpina"
    echo "‚Ä¢ Cleaning supplies delivery from P&G"
    echo "‚Ä¢ Entrega de productos de limpieza de P&G"
    
    echo ""
    echo "üè™ Processing Orders for Major Chains | Procesando √ìrdenes para Grandes Cadenas:"
    echo "-------------------------------------------------------------------------------"
    
    # Simulate order for √âxito
    echo ""
    echo "üõí √âXITO MEDELL√çN CENTRO - Order Processing | Procesando Pedido:"
    echo "  üìç Location: Carrera 46 #52-02, Centro"
    echo "  üì¶ Items requested | Art√≠culos solicitados:"
    echo "     ‚Ä¢ 20 cases Arroz Diana Extra 5kg"
    echo "     ‚Ä¢ 15 cases Yogurt Alpina Griego"
    echo "     ‚Ä¢ 10 cases Detergente Ariel 2kg"
    
    echo ""
    echo "üõí OL√çMPICA EL POBLADO - Order Processing | Procesando Pedido:"
    echo "  üìç Location: Carrera 43A #16-15, El Poblado"
    echo "  üì¶ Items requested | Art√≠culos solicitados:"
    echo "     ‚Ä¢ 25 cases Aceite Gourmet 1L"
    echo "     ‚Ä¢ 30 units Pollo Campollo Entero"
    echo "     ‚Ä¢ 12 cases Colgate Total 150ml"
    
    echo ""
    echo "üõí CARULLA LAURELES - Order Processing | Procesando Pedido:"
    echo "  üìç Location: Carrera 75 #36-127, Laureles"
    echo "  üì¶ Items requested | Art√≠culos solicitados:"
    echo "     ‚Ä¢ 18 cases Pasta Doria Espagueti"
    echo "     ‚Ä¢ 20 cases Queso Colanta Campesino"
    echo "     ‚Ä¢ 8 cases Shampoo Head & Shoulders"
    
    echo ""
    echo "üõí TIENDA D1 BELLO - Order Processing | Procesando Pedido:"
    echo "  üìç Location: Calle 51 #50-35, Bello"
    echo "  üì¶ Items requested | Art√≠culos solicitados:"
    echo "     ‚Ä¢ 15 cases Az√∫car Manuelita 2kg"
    echo "     ‚Ä¢ 10 cases Suavizante Suavitel"
    echo "     ‚Ä¢ 12 cases Jab√≥n Protex Antibacterial"
}

# Function to test APIs with Colombian context
test_colombian_apis() {
    echo ""
    echo "üß™ Testing APIs with Colombian Products | Probando APIs con Productos Colombianos"
    echo "=================================================================================="
    
    echo ""
    echo "1. üìç Checking warehouse locations | Verificando ubicaciones del almac√©n:"
    echo "-----------------------------------------------------------------------"
    echo "curl -X GET http://localhost:8120/v1/locations | jq '.[] | select(.area == \"ALMACEN-SECO\")'"
    
    echo ""
    echo "2. üöõ Checking transport units with Colombian products | Verificando unidades de transporte:"
    echo "-----------------------------------------------------------------------------------------"
    echo "curl -X GET http://localhost:8120/v1/transport-units | jq '.[] | select(.barcode | contains(\"PAL-77\"))'"
    
    echo ""
    echo "3. üìã Current transport orders to supermarkets | √ìrdenes de transporte actuales:"
    echo "------------------------------------------------------------------------------"
    echo "curl -X GET http://localhost:8131/v1/transport-orders | jq '.[] | select(.customer | contains(\"EXITO\"))'"
    
    echo ""
    echo "üîß Sample API Calls | Llamadas de API de Muestra:"
    echo "================================================="
    
    # Test if Common Service is responding
    echo ""
    echo "Testing Common Service | Probando Servicio Com√∫n..."
    COMMON_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null http://localhost:8120/actuator/health)
    if [ "$COMMON_RESPONSE" = "200" ]; then
        echo "‚úÖ Common Service is healthy | Servicio Com√∫n est√° saludable"
        
        echo ""
        echo "üè™ Warehouse locations available | Ubicaciones de almac√©n disponibles:"
        echo "# Get all storage areas"
        echo "curl -s http://localhost:8120/v1/locations 2>/dev/null | head -10 || echo 'Service starting...'"
        
        # Try to actually call the API
        LOCATIONS=$(curl -s http://localhost:8120/v1/locations 2>/dev/null | head -5)
        if [ -n "$LOCATIONS" ]; then
            echo "Sample locations | Ubicaciones de muestra:"
            echo "$LOCATIONS"
        else
            echo "‚è≥ Service still initializing | Servicio a√∫n inicializando..."
        fi
        
    else
        echo "‚è≥ Common Service still starting | Servicio Com√∫n a√∫n iniciando..."
    fi
    
    # Test TMS Service
    echo ""
    echo "Testing TMS Service | Probando Servicio TMS..."
    TMS_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null http://localhost:8131/actuator/health)
    if [ "$TMS_RESPONSE" = "200" ]; then
        echo "‚úÖ TMS Service is healthy | Servicio TMS est√° saludable"
        
        echo ""
        echo "üì¶ Transport orders for supermarkets | √ìrdenes de transporte para supermercados:"
        echo "# Get current orders"
        echo "curl -s http://localhost:8131/v1/transport-orders 2>/dev/null | head -10 || echo 'Service starting...'"
        
    else
        echo "‚è≥ TMS Service still starting | Servicio TMS a√∫n iniciando..."
    fi
}

# Function to create sample transport orders
create_sample_orders() {
    echo ""
    echo "üìù Creating Sample Transport Orders | Creando √ìrdenes de Transporte de Muestra"
    echo "============================================================================="
    
    echo ""
    echo "üéØ Order 1: Arroz Diana to √âxito | Arroz Diana para √âxito"
    echo "curl -X POST http://localhost:8131/v1/transport-orders \\"
    echo "  -H 'Content-Type: application/json' \\"
    echo "  -d '{"
    echo "    \"transportOrderNumber\": \"TO-EXITO-$(date +%H%M)\","
    echo "    \"sourceLocation\": \"SEC-A01-01\","
    echo "    \"targetLocation\": \"PICK-01\","
    echo "    \"barcode\": \"PAL-7701234567890\","
    echo "    \"priority\": 80"
    echo "  }'"
    
    echo ""
    echo "üéØ Order 2: Yogurt Alpina to Ol√≠mpica | Yogurt Alpina para Ol√≠mpica"
    echo "curl -X POST http://localhost:8131/v1/transport-orders \\"
    echo "  -H 'Content-Type: application/json' \\"
    echo "  -d '{"
    echo "    \"transportOrderNumber\": \"TO-OLIMPICA-$(date +%H%M)\","
    echo "    \"sourceLocation\": \"REF-C01-01\","
    echo "    \"targetLocation\": \"PICK-02\","
    echo "    \"barcode\": \"REF-7705678901234\","
    echo "    \"priority\": 90"
    echo "  }'"
    
    echo ""
    echo "üéØ Order 3: Frozen chicken to Carulla | Pollo congelado para Carulla"
    echo "curl -X POST http://localhost:8131/v1/transport-orders \\"
    echo "  -H 'Content-Type: application/json' \\"
    echo "  -d '{"
    echo "    \"transportOrderNumber\": \"TO-CARULLA-$(date +%H%M)\","
    echo "    \"sourceLocation\": \"CONG-D01-01\","
    echo "    \"targetLocation\": \"PICK-03\","
    echo "    \"barcode\": \"CONG-7708901234567\","
    echo "    \"priority\": 95"
    echo "  }'"
}

# Main execution
echo "üöÄ Starting Colombian Supermarket Distribution Demo | Iniciando Demo de Distribuci√≥n"
echo ""

echo "1. üîç Service Health Check | Verificaci√≥n de Estado de Servicios"
echo "================================================================"
check_service "Eureka Service Registry" 8762
check_service "RabbitMQ Management" 15672
check_service "Jaeger Tracing" 16686

echo ""
echo "2. üìã Service Discovery | Descubrimiento de Servicios"
echo "====================================================="
echo "Registered services | Servicios registrados:"
curl -s http://localhost:8762/eureka/apps | grep -o '<name>[^<]*</name>' | sed 's/<name>//g' | sed 's/<\/name>//g' | sort | uniq

echo ""
echo "3. üè≠ Daily Operations Simulation | Simulaci√≥n de Operaciones Diarias"
echo "===================================================================="
simulate_daily_operations

echo ""
echo "4. üß™ API Testing | Pruebas de API"
echo "==================================="
test_colombian_apis

echo ""
echo "5. üìù Sample Order Creation | Creaci√≥n de √ìrdenes de Muestra"
echo "============================================================"
create_sample_orders

echo ""
echo "üéâ Demo Complete! | ¬°Demo Completado!"
echo "====================================="
echo ""
echo "üåü What You've Experienced | Lo Que Has Experimentado:"
echo "‚Ä¢ Real Colombian supermarket chain distribution"
echo "‚Ä¢ Distribuci√≥n real de cadenas de supermercados colombianos"
echo "‚Ä¢ Multi-temperature storage management (dry, refrigerated, frozen)"
echo "‚Ä¢ Gesti√≥n de almacenamiento multi-temperatura (seco, refrigerado, congelado)"
echo "‚Ä¢ Automated picking and order processing"
echo "‚Ä¢ Preparaci√≥n automatizada y procesamiento de √≥rdenes"
echo "‚Ä¢ Major brand product handling (Alpina, Diana, Colgate, etc.)"
echo "‚Ä¢ Manejo de productos de marcas principales (Alpina, Diana, Colgate, etc.)"
echo ""
echo "üîó Monitor Your System | Monitorea Tu Sistema:"
echo "=============================================="
echo "‚Ä¢ Eureka Dashboard: http://localhost:8762"
echo "‚Ä¢ RabbitMQ Messages: http://localhost:15672 (guest/guest)"
echo "‚Ä¢ Jaeger Traces: http://localhost:16686"
echo ""
echo "üíº Business Value | Valor Comercial:"
echo "==================================="
echo "This system can handle:"
echo "Este sistema puede manejar:"
echo "‚Ä¢ 10,000+ SKUs across all product categories"
echo "‚Ä¢ 10,000+ SKUs en todas las categor√≠as de productos"
echo "‚Ä¢ Multiple temperature zones and storage requirements"
echo "‚Ä¢ M√∫ltiples zonas de temperatura y requisitos de almacenamiento"
echo "‚Ä¢ Real-time inventory tracking and order fulfillment"
echo "‚Ä¢ Seguimiento de inventario en tiempo real y cumplimiento de √≥rdenes"
echo "‚Ä¢ Integration with ERP systems and POS terminals"
echo "‚Ä¢ Integraci√≥n con sistemas ERP y terminales POS"
echo ""
echo "¬°Perfecto para centros de distribuci√≥n en Colombia! üá®üá¥" 